pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins-agent: "true"
spec:
  containers:
    - name: jnlp
      image: jenkins/inbound-agent:latest
      tty: true
    - name: docker
      image: docker:24-dind
      securityContext:
        privileged: true
      tty: true
      command:
        - dockerd
      args:
        - "--host=unix:///var/run/docker.sock"
        - "--storage-driver=overlay2"
      env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
      volumeMounts:
        - name: docker-storage
          mountPath: /var/lib/docker
  volumes:
    - name: docker-storage
      emptyDir: {}
"""
        }
    }

    environment {
        AWS_REGION = "eu-west-3"
        ECR_REPO = "160885295462.dkr.ecr.eu-west-3.amazonaws.com/dev/myapp"
        IMAGE_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Verify Docker') {
            steps {
                container('docker') {
                    script {
                        sh 'docker --version'   // Check Docker version
                        sh 'docker ps'         // Ensure daemon is running
                    }
                }
            }
        }

        stage('Build Image') {
            steps {
                container('docker') {
                    script {
                        sh 'docker build -t ${ECR_REPO}:staging-${IMAGE_TAG} source/myapp/'  // Build image
                    }
                }
            }
        }

        stage('Push Image to ECR') {
            steps {
                container('docker') {
                    withAWS(credentials: 'aws-credentials-id', region: "${AWS_REGION}") {
                        script {
                            sh """
                                aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}
                                docker push ${ECR_REPO}:${IMAGE_TAG}
                            """
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ Image pushed successfully: ${ECR_REPO}:${IMAGE_TAG}"
        }
        failure {
            echo "❌ CI pipeline failed."
        }
    }
}
