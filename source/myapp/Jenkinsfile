pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins-agent: "true"
spec:
  containers:
    - name: jnlp
      image: jenkins/inbound-agent:latest
      tty: true
    - name: docker
      image: docker:24-dind
      securityContext:
        privileged: true
      tty: true
      command:
        - dockerd
      args:
        - "--host=unix:///var/run/docker.sock"
        - "--storage-driver=overlay2"
      env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
      volumeMounts:
        - name: docker-storage
          mountPath: /var/lib/docker
  volumes:
    - name: docker-storage
      emptyDir: {}
"""
        }
    }

    stages {
        stage('Verify Docker') {
            steps {
                container('docker') {
                    script {
                        sh 'docker --version'   // Check if Docker is installed
                        sh 'docker ps'         // Ensure the daemon is running
                    }
                }
            }
        }

        stage('Build and Test') {
            steps {
                container('docker') {
                    script {
                        sh 'ls -la'  // Debugging: List workspace files
                        sh 'docker build -t myapp:latest source/myapp/'  // Ensure the build context is correct
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ CI pipeline succeeded!"
        }
        failure {
            echo "❌ CI pipeline failed."
        }
    }
}
