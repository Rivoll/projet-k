pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'eu-west-3' 
        ECR_REPO = "160885295462.dkr.ecr.eu-west-3.amazonaws.com/myapp"
        IMAGE_TAG = "${BUILD_NUMBER}"  // Or use timestamp or custom versioning
        K8S_MANIFESTS_REPO = 'https://github.com/Rivoll/projet-k.git'
    }

    stages {
        stage('Build and Test') {
            steps {
                script {
                    // Build the Docker image
                    sh 'docker build -t ${ECR_REPO}:${IMAGE_TAG} .'
                    // Run tests (you can add this step if you want tests here)
                    sh 'docker run --rm ${ECR_REPO}:${IMAGE_TAG} npm run test'  // Replace with your test command
                }
            }
        }

        stage('Push Image to ECR') {
            steps {
                script {
                    // Authenticate with ECR
                    sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}'
                    // Push the Docker image to ECR
                    sh 'docker push ${ECR_REPO}:${IMAGE_TAG}'
                }
            }
        }

        stage('Update Kubernetes Manifests') {
            steps {
                script {
                    // Update the Kubernetes deployment YAML with the new image tag
                    sh """
                    git clone ${K8S_MANIFESTS_REPO} k8s-manifests
                    cd k8s-manifests
                    # Update the deployment.yaml with the new image tag
                    sed -i 's|image: .*|image: ${ECR_REPO}:${IMAGE_TAG}|' deployment.yaml
                    # Commit the changes to the main branch
                    git config user.email "jenkins@mydomain.com"
                    git config user.name "Jenkins"
                    git add .
                    git commit -m "Update image tag to ${IMAGE_TAG}"
                    git push origin main
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'CI pipeline succeeded! Image pushed and Kubernetes manifests updated.'
        }
        failure {
            echo 'CI pipeline failed.'
        }
    }
}
