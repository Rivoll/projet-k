# Full values.yaml for Prometheus (Helm chart)
# This file contains many settings; adjust only the ones you need.
# In this example, we configure Prometheus to be exposed under the path "/prometheus"
# via an Ingress that does not specify a host.

rbac:
  create: true

podSecurityPolicy:
  enabled: false

imagePullSecrets: []

serviceAccounts:
  server:
    create: true
    name: ""
    annotations: {}

commonMetaLabels: {}

configmapReload:
  reloadUrl: ""
  env: []
  prometheus:
    enabled: true
    name: configmap-reload
    image:
      repository: quay.io/prometheus-operator/prometheus-config-reloader
      tag: v0.78.2
      digest: ""
      pullPolicy: IfNotPresent
    containerPort: 8080
    containerPortName: metrics
    extraArgs: {}
    extraVolumeDirs: []
    extraVolumeMounts: []
    extraConfigmapMounts: []
    containerSecurityContext: {}
    livenessProbe:
      httpGet:
        path: /healthz
        port: metrics
        scheme: HTTP
      periodSeconds: 10
      initialDelaySeconds: 2
    readinessProbe:
      httpGet:
        path: /healthz
        port: metrics
        scheme: HTTP
      periodSeconds: 10
    startupProbe:
      enabled: false
      httpGet:
        path: /healthz
        port: metrics
        scheme: HTTP
      periodSeconds: 10
    resources: {}

server:
  name: server
  image:
    repository: quay.io/prometheus/prometheus
    tag: ""
    digest: ""
    pullPolicy: IfNotPresent
  command: []
  env: []
  defaultFlagsOverride: []
  extraFlags: []
  extraArgs: {}
  configPath: /etc/config/prometheus.yml
  storagePath: ""
  # Tell Prometheus that its UI should be served under "/prometheus"
  prefixURL: /prometheus
  # The external URL that Prometheus will use in links and redirects.
  baseURL: "http://35.180.117.247/prometheus"
  sidecarContainers: {}
  sidecarTemplateValues: {}
  clusterRoleNameOverride: ""
  releaseNamespace: false
  namespaces: []
  replicaCount: 1
  revisionHistoryLimit: 10
  podAnnotations: {}
  podLabels: {}
  ingress:
    enabled: true
    # Leave hosts empty so that no host field is generated; the template will then use defaultBackend.
    hosts: []
    path: /prometheus
    pathType: Prefix
    annotations:
    extraLabels: {}
    tls: []
  strategy:
    type: Recreate
  hostAliases: []
  tolerations: []
  nodeSelector: {}
  affinity: {}
  podAntiAffinity: "soft"
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  topologySpreadConstraints: []
  podDisruptionBudget:
    enabled: false
  persistentVolume:
    enabled: true
    statefulSetNameOverride: ""
    accessModes:
      - ReadWriteOnce
    labels: {}
    annotations: {}
    existingClaim: ""
    mountPath: /data
    size: 8Gi
    subPath: ""
  emptyDir:
    sizeLimit: ""
  resources: {}
  hostNetwork: false
  dnsPolicy: ClusterFirst
  portName: ""
  verticalAutoscaler:
    enabled: false
  dnsConfig: {}
  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534
    fsGroup: 65534
  containerSecurityContext: {}
  service:
    enabled: true
    annotations: {}
    labels: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 80
    sessionAffinity: None
    type: ClusterIP
    gRPC:
      enabled: false
      servicePort: 10901
    statefulsetReplica:
      enabled: false
      replica: 0
    additionalPorts: []
  terminationGracePeriodSeconds: 300
  retention: "15d"
  retentionSize: ""
  ruleFiles: {}
  scrapeConfigFiles: []
  serverFiles:
    alerting_rules.yml: {}
    recording_rules.yml: {}
    prometheus.yml:
      rule_files:
        - /etc/config/recording_rules.yml
        - /etc/config/alerting_rules.yml
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets: [ "localhost:9090" ]
  extraScrapeConfigs: ""
  alertRelabelConfigs: {}
  networkPolicy:
    enabled: false
  forceNamespace: ""
  extraManifests: []

alertmanager:
  enabled: true
  persistence:
    size: 2Gi
  podSecurityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534
    fsGroup: 65534

kube-state-metrics:
  enabled: true

prometheus-node-exporter:
  enabled: true
  rbac:
    pspEnabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false

prometheus-pushgateway:
  enabled: true
  serviceAnnotations:
    prometheus.io/probe: pushgateway

grafana:
  enabled: true
  adminPassword: "admin"
  persistence:
    enabled: true
    size: 5Gi
